services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fastfood
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app_development:
    profiles: ["dev"]
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/usr/src/app
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/fastfood
    depends_on:
      db:
        condition: service_healthy
    command: ["npm", "run", "dev:setup"]
    restart: unless-stopped

  prisma_studio_development:
    profiles: ["dev"]
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/usr/src/app
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/fastfood
    depends_on:
      db:
        condition: service_healthy
    command: ["npx", "prisma", "studio"]
    restart: unless-stopped

  app_production:
    profiles: ["prod"]
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/fastfood
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
