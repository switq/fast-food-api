{
  "info": {
    "_postman_id": "complete-fast-food-api-2025",
    "name": "Fast Food API - Complete Collection",
    "description": "Collection completa com TODOS os endpoints da Fast Food API - Atualizada em 08/01/2025\n\nüìã Includes complete order lifecycle testing with automatic ID management",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "üè† Health & Docs",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/health",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "API Documentation (Swagger)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api-docs",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api-docs"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üì¶ Categories",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/categories",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "categories"]
            }
          },
          "response": []
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/categories/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "categories", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_category_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Category\",\n    \"description\": \"A new category of items\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/categories",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "categories"]
            }
          },
          "response": []
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Category\",\n    \"description\": \"Updated description\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/categories/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "categories", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_category_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/categories/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "categories", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_category_id"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë§ Customers",
      "item": [
        {
          "name": "Get All Customers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/customers",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "customers"]
            }
          },
          "response": []        },
        {
          "name": "Get Customer by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/customers/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "customers", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_customer_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Identify Customer by CPF",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/customers/identify/:cpf",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "customers", "identify", ":cpf"],
              "variable": [
                {
                  "key": "cpf",
                  "value": "123.456.789-09",
                  "description": "CPF do cliente (formatado ou apenas n√∫meros)"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Customer",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"cpf\": \"12345678901\",\n    \"phone\": \"11999999999\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/customers",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "customers"]
            }
          },
          "response": []
        },
        {
          "name": "Update Customer",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"John Doe Updated\",\n    \"email\": \"john.updated@example.com\",\n    \"cpf\": \"12345678901\",\n    \"phone\": \"11999999999\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/customers/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "customers", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_customer_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Customer",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/customers/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "customers", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_customer_id"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üçî Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/products",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "products"]
            }
          },
          "response": []
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/products/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_product_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Products by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/category/:categoryId/products",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "category", ":categoryId", "products"],
              "variable": [
                {
                  "key": "categoryId",
                  "value": "your_category_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Burger\",\n    \"description\": \"A delicious new burger\",\n    \"price\": 15.99,\n    \"categoryId\": \"your_category_id\",\n    \"imageUrl\": \"https://example.com/burger.jpg\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/products",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "products"]
            }
          },
          "response": []
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Burger\",\n    \"description\": \"An even more delicious burger\",\n    \"price\": 16.99,\n    \"categoryId\": \"your_category_id\",\n    \"imageUrl\": \"https://example.com/burger-updated.jpg\",\n    \"isAvailable\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/products/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_product_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/products/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_product_id"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìã Orders",
      "item": [
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders"]
            }
          },
          "response": []        },
        {
          "name": "Get Orders by Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/status/:status",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", "status", ":status"],
              "variable": [
                {
                  "key": "status",
                  "value": "PENDING"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Orders by Customer",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/customer/:customerId",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", "customer", ":customerId"],
              "variable": [
                {
                  "key": "customerId",
                  "value": "your_customer_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customerId\": \"your_customer_id\",\n    \"items\": [\n        {\n            \"productId\": \"your_product_id\",\n            \"quantity\": 2,\n            \"observation\": \"Extra cheese\"\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/orders",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders"]
            }
          },
          "response": []
        },
        {
          "name": "Update Order Status",
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"CONFIRMED\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/orders/:id/status",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":id", "status"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Confirm Order",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/:id/status/confirmOrder",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":id", "status", "confirmOrder"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Confirm Payment",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/:id/status/confirmPayment",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":id", "status", "confirmPayment"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Start Preparing",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/:id/status/startPreparing",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":id", "status", "startPreparing"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Mark as Ready",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/:id/status/markReady",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":id", "status", "markReady"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Mark as Delivered",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/:id/status/markDelivered",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":id", "status", "markDelivered"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Cancel Order",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/:id/status/cancel",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":id", "status", "cancel"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Add Items to Order",
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"items\": [\n        {\n            \"productId\": \"product_id\",\n            \"quantity\": 2,\n            \"observation\": \"Extra cheese\"\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/orders/:id/items",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":id", "items"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Item Quantity",
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"quantity\": 3\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/orders/:orderId/items/:itemId",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":orderId", "items", ":itemId"],
              "variable": [
                {
                  "key": "orderId",
                  "value": "your_order_id"
                },
                {
                  "key": "itemId",
                  "value": "your_item_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Order",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/:id",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Payment for Order",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"paymentMethodId\": \"pix\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/orders/:orderId/payment",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "orders", ":orderId", "payment"],
              "variable": [
                {
                  "key": "orderId",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },    {
      "name": "üç≥ Kitchen",
      "item": [        {
          "name": "Get Kitchen Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/kitchen/orders",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "kitchen", "orders"]
            },
            "description": "Smart kitchen ordering system with priority sorting: READY > PREPARING > PAYMENT_CONFIRMED. Oldest orders first within each status. Automatically excludes DELIVERED orders."
          },
          "response": []        },        {
          "name": "Get Orders Awaiting Preparation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/kitchen/orders/awaiting-preparation",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "kitchen", "orders", "awaiting-preparation"]
            },
            "description": "Lista apenas pedidos aguardando preparo (status PAYMENT_CONFIRMED)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üí≥ Payments",
      "item": [
        {
          "name": "Get Payment Status by Order ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/payments/order/:orderId/status",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "payments", "order", ":orderId", "status"],
              "variable": [
                {
                  "key": "orderId",
                  "value": "your_order_id"
                }
              ]
            }
          },
          "response": []
        },        {
          "name": "Payment Webhook",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"id\": \"payment_id_from_mercado_pago\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/payments/webhook",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "payments", "webhook"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîî Webhooks",
      "item": [
        {
          "name": "Payment Webhook (Dedicated)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"id\": \"payment_id_from_mercado_pago\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/webhooks/paymentwebhook",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["webhooks", "paymentwebhook"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üß™ Test",
      "item": [
        {
          "name": "Test Payment QR Generation",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/test/payment",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "test", "payment"]
            }
          },
          "response": []
        },
        {
          "name": "Test Webhook",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"data\": {\n        \"id\": \"test-payment-id\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/test/webhook",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["api", "test", "webhook"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üöÄ Full Order Flow",
      "description": "Um fluxo completo para criar e processar um pedido, passo a passo. Execute as requisi√ß√µes na ordem.",
      "item": [
        {
          "name": "1. Create a New Customer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Extrai o ID do cliente da resposta e o salva como uma vari√°vel de cole√ß√£o",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"customerId\", jsonData.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Flow Tester\",\n    \"email\": \"flow@test.com\",\n    \"cpf\": \"12345678900\",\n    \"phone\": \"11987654321\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/customers",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "3000",
              "path": [
                "api",
                "customers"
              ]
            }
          },
          "response": []
        },
        {
          "name": "2. Create a New Order (PENDING)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Extrai o ID do pedido da resposta e o salva como uma vari√°vel de cole√ß√£o",
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"orderId\", jsonData.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customerId\": \"{{customerId}}\",\n    \"items\": [\n        {\n            \"productId\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\n            \"quantity\": 1,\n            \"observation\": \"Pedido de teste do fluxo completo\"\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/orders",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "3000",
              "path": [
                "api",
                "orders"
              ]
            },
            "description": "Cria um novo pedido usando o `customerId` da etapa anterior. **Aten√ß√£o:** Substitua o `productId` por um ID de produto v√°lido do seu banco de dados (gerado pelo seed)."
          },
          "response": []
        },        {
          "name": "3. Confirm the Order (CONFIRMED)",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/{{orderId}}/status/confirmOrder",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "3000",
              "path": [
                "api",
                "orders",
                "{{orderId}}",
                "status",
                "confirmOrder"
              ]
            },
            "description": "Confirma o pedido e gera n√∫mero do pedido para acompanhamento do cliente. Retorna orderNumber, createdAt e customerName."
          },
          "response": []
        },
        {
          "name": "4. Create Payment (Generates QR Code)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"paymentMethodId\": \"pix\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:3000/api/orders/{{orderId}}/payment",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "3000",
              "path": [
                "api",
                "orders",
                "{{orderId}}",
                "payment"
              ]
            },
            "description": "Gera o pagamento para o pedido confirmado. Em um cen√°rio real, o pr√≥ximo passo (Confirmar Pagamento) seria acionado pelo webhook do Mercado Pago ap√≥s o cliente pagar."
          },
          "response": []
        },
        {
          "name": "5. Confirm Payment (PAYMENT_CONFIRMED)",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/{{orderId}}/status/confirmPayment",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "3000",
              "path": [
                "api",
                "orders",
                "{{orderId}}",
                "status",
                "confirmPayment"
              ]
            },
            "description": "Simula a confirma√ß√£o do pagamento, que normalmente √© feita pelo webhook. Move o status para `PAYMENT_CONFIRMED`."
          },
          "response": []
        },
        {
          "name": "6. Start Preparing (PREPARING)",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/{{orderId}}/status/startPreparing",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "3000",
              "path": [
                "api",
                "orders",
                "{{orderId}}",
                "status",
                "startPreparing"
              ]
            },
            "description": "Inicia o preparo do pedido na cozinha."
          },
          "response": []
        },
        {
          "name": "7. Mark as Ready (READY)",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/{{orderId}}/status/markReady",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "3000",
              "path": [
                "api",
                "orders",
                "{{orderId}}",
                "status",
                "markReady"
              ]
            },
            "description": "Marca o pedido como pronto para retirada."
          },
          "response": []
        },
        {
          "name": "8. Mark as Delivered (DELIVERED)",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/api/orders/{{orderId}}/status/markDelivered",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "3000",
              "path": [
                "api",
                "orders",
                "{{orderId}}",
                "status",
                "markDelivered"
              ]
            },
            "description": "Finaliza o pedido, marcando-o como entregue."
          },
          "response": []
        }
      ]
    }
  ]
}
